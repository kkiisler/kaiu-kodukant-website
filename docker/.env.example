# ============================================
# MTÃœ Kaiu Kodukant - Environment Configuration
# ============================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# ============================================
# DOMAIN CONFIGURATION
# ============================================

# Your domain name (without https:// or www.)
DOMAIN_NAME=kaiukodukant.ee

# API domain (with https://)
API_DOMAIN=https://api.kaiukodukant.ee

# ============================================
# RECAPTCHA CONFIGURATION
# ============================================
# Get these from: https://www.google.com/recaptcha/admin
# Choose reCAPTCHA v3 when creating

# Site key (used in frontend)
RECAPTCHA_SITE_KEY=YOUR_RECAPTCHA_SITE_KEY_HERE

# Secret key (used in backend for validation)
RECAPTCHA_SECRET_KEY=YOUR_RECAPTCHA_SECRET_KEY_HERE

# ============================================
# EMAIL CONFIGURATION (RESEND)
# ============================================
# Sign up at: https://resend.com
# Free tier: 100 emails/day, 3,000 emails/month
# Verify your domain in Resend dashboard before sending

# Resend API Key (get from: https://resend.com/api-keys)
RESEND_API_KEY=re_xxxxx_your_resend_api_key_here

# Sender email address (must be verified domain in Resend)
RESEND_FROM_EMAIL=noreply@kaiukodukant.ee

# Recipient email for form notifications
INFO_EMAIL=info@kaiukodukant.ee

# ============================================
# ADMIN DASHBOARD AUTHENTICATION
# ============================================

# Admin password hash (bcrypt hashed)
# Generate with one of these commands:
# 1. node -e "console.log(require('bcrypt').hashSync('your-password-here', 10))"
# 2. docker run --rm -it node:20-alpine sh -c "npm install bcrypt && node -e \"console.log(require('bcrypt').hashSync('your-password-here', 10))\""
# Example hash for password "admin123": $2b$10$YourHashedPasswordHere
ADMIN_PASSWORD_HASH=$2b$10$REPLACE_WITH_YOUR_GENERATED_HASH

# JWT Secret for session tokens
# Generate with: openssl rand -base64 32
# Example: Kl3mQX9ZP1RmYKDx+8JKhL2vB4N6TcWzGqVnHsMb5Xs=
JWT_SECRET=REPLACE_WITH_YOUR_GENERATED_SECRET_32_CHARS_MIN

# ============================================
# S3 CONFIGURATION (Pilvio)
# ============================================
# Used for monitoring calendar/gallery sync status
# Get these credentials from your S3 provider dashboard

S3_ENDPOINT=https://s3.pilw.io
S3_BUCKET=your-bucket-name
S3_REGION=eu-west-1
S3_ACCESS_KEY_ID=YOUR_S3_ACCESS_KEY_ID_HERE
S3_SECRET_ACCESS_KEY=YOUR_S3_SECRET_ACCESS_KEY_HERE

# ============================================
# OPTIONAL: GOOGLE SHEETS INTEGRATION
# ============================================
# Enable if you want to sync form submissions to Google Sheets
# This is optional - SQLite is the primary storage

# Enable/disable Google Sheets sync
GOOGLE_SHEETS_ENABLED=false

# Spreadsheet IDs (only needed if GOOGLE_SHEETS_ENABLED=true)
# MEMBERSHIP_SPREADSHEET_ID=1scwMSkGu0wz0pZYSGX1lQvo2xJnR_UdFhGT_wEa-Upw
# CONTACT_SPREADSHEET_ID=1U0gW3V6DLbuVSDfryuIVzfaoOe1JqG-DXo9NXIm3AF0

# Google Service Account credentials (JSON string)
# Only needed if GOOGLE_SHEETS_ENABLED=true
# Get from: Google Cloud Console > Service Accounts > Keys
# GOOGLE_SERVICE_ACCOUNT={"type":"service_account","project_id":"..."}

# ============================================
# DATA RETENTION & MAINTENANCE
# ============================================

# Number of days to keep form submissions
# 0 = keep forever (default)
# 365 = keep for 1 year
# 90 = keep for 3 months
DATA_RETENTION_DAYS=0

# ============================================
# APPLICATION SETTINGS
# ============================================

# Node environment
NODE_ENV=production

# API port (internal - don't change unless needed)
PORT=3000

# ============================================
# QUICK SETUP CHECKLIST
# ============================================
# 1. [ ] Set DOMAIN_NAME
# 2. [ ] Configure reCAPTCHA keys (site key + secret key)
# 3. [ ] Set up Resend account and add RESEND_API_KEY
# 4. [ ] Verify domain in Resend dashboard
# 5. [ ] Set INFO_EMAIL for receiving form notifications
# 6. [ ] Generate and set ADMIN_PASSWORD_HASH
# 7. [ ] Generate and set JWT_SECRET
# 8. [ ] Verify S3 credentials (from Phase 1&2)
# 9. [ ] Save as .env (not .env.example)
# 10. [ ] Run: docker compose up -d --build
# 11. [ ] Test: https://api.kaiukodukant.ee/health
# 12. [ ] Test form submission and verify email delivery