# Production Caddyfile for MTÃœ Kaiu Kodukant Website
# Automatic HTTPS with Let's Encrypt

{$DOMAIN_NAME} {
	# Enable file server
	root * /usr/share/caddy

	# URL rewriting for clean URLs (pages/ directory)
	@root {
		path /
	}
	rewrite @root /pages/index.html

	@pages {
		path /about
		path /events
		path /gallery
		path /membership
		path /contact
	}
	rewrite @pages /pages{path}.html

	# S3 Proxy for calendar events (bypasses CORS)
	handle /api/calendar/events.json {
		reverse_proxy https://s3.pilw.io {
			header_up Host s3.pilw.io
			header_down Access-Control-Allow-Origin "{$DOMAIN_NAME}"
			header_down Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
			header_down Access-Control-Allow-Headers "*"
			header_down Cache-Control "public, max-age=300"
			rewrite /kaiugalerii/calendar/events.json
		}
	}

	# S3 Proxy for gallery (Phase 2)
	handle_path /api/gallery/* {
		reverse_proxy https://s3.pilw.io {
			header_up Host s3.pilw.io
			header_down Access-Control-Allow-Origin "{$DOMAIN_NAME}"
			header_down Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
			header_down Access-Control-Allow-Headers "*"
			header_down Cache-Control "public, max-age=300"
			rewrite /kaiugalerii/gallery{path}
		}
	}

	# S3 Proxy for images
	handle_path /api/images/* {
		reverse_proxy https://s3.pilw.io {
			header_up Host s3.pilw.io
			header_down Access-Control-Allow-Origin "{$DOMAIN_NAME}"
			header_down Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
			header_down Access-Control-Allow-Headers "*"
			header_down Cache-Control "public, max-age=3600"
			rewrite /kaiugalerii/images{path}
		}
	}

	file_server

	# Enable compression
	encode gzip zstd

	# Security headers (stricter for production)
	header {
		# HSTS - enforce HTTPS
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		
		# Basic security headers
		X-Content-Type-Options "nosniff"
		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"
		Permissions-Policy "geolocation=(), microphone=(), camera=()"
		
		# CSP for production
		Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com https://cdn.tailwindcss.com https://cdn.jsdelivr.net https://script.google.com https://script.googleusercontent.com https://www.recaptcha.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.kaiukodukant.ee https://script.google.com https://script.googleusercontent.com https://www.google.com https://www.gstatic.com https://www.recaptcha.net; frame-src 'self' https://www.google.com https://www.recaptcha.net https://script.google.com https://script.googleusercontent.com"
		
		# Remove server header
		-Server
	}

	# Cache static assets aggressively
	@static {
		path *.css *.js *.jpg *.jpeg *.png *.gif *.svg *.ico *.woff *.woff2 *.ttf *.eot
	}
	header @static {
		Cache-Control "public, max-age=31536000, immutable"
	}

	# Cache HTML files for shorter period
	@html_cache {
		path *.html
	}
	header @html_cache {
		Cache-Control "public, max-age=3600, must-revalidate"
	}

	# Rate limiting (optional)
	# rate_limit {
	#     zone static {
	#         key {remote_host}
	#         events 100
	#         window 1m
	#     }
	# }

	# Logging
	log {
		output file /var/log/caddy/access.log {
			roll_size 100mb
			roll_keep 10
			roll_keep_for 720h
		}
		format json
		level INFO
	}

	# Custom error pages
	handle_errors {
		@404 {
			expression {http.error.status_code} == 404
		}
		header @404 Content-Type "text/html; charset=utf-8"
		respond @404 "<!DOCTYPE html><html lang='et'><head><meta charset='UTF-8'><title>Lehte ei leitud</title></head><body><h1>404 - Lehte ei leitud</h1><p><a href='/'>Tagasi avalehele</a></p></body></html>" 404
		
		@5xx {
			expression {http.error.status_code} >= 500
		}
		header @5xx Content-Type "text/html; charset=utf-8"
		respond @5xx "<!DOCTYPE html><html lang='et'><head><meta charset='UTF-8'><title>Serveri viga</title></head><body><h1>Serveri viga</h1><p>Palun proovige hiljem uuesti.</p></body></html>" {http.error.status_code}
	}
}

# API subdomain configuration
api.{$DOMAIN_NAME} {
	# Reverse proxy to API container
	reverse_proxy api:3000 {
		# Health check
		health_uri /health
		health_interval 10s
		health_timeout 3s

		# Headers
		header_up Host {host}
		header_up X-Real-IP {remote}
		header_up X-Forwarded-For {remote}
		header_up X-Forwarded-Proto {scheme}
	}

	# CORS headers are handled by the API server itself
	# Don't add duplicate headers

	# Security headers
	header {
		# HSTS
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Content-Type-Options "nosniff"
		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"

		# CSP for API admin panel
		Content-Security-Policy "default-src 'self'; script-src 'self' https://cdn.tailwindcss.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' data:; img-src 'self' data: https:; connect-src 'self'; frame-src 'none'"

		-Server
	}

	# Enable compression
	encode gzip zstd

	# Logging
	log {
		output file /var/log/caddy/api-access.log {
			roll_size 100mb
			roll_keep 5
			roll_keep_for 720h
		}
		format json
		level INFO
	}
}

# Redirect www to non-www (only if DNS record exists)
# Uncomment if you have a www DNS record:
# www.{$DOMAIN_NAME} {
# 	redir https://{$DOMAIN_NAME}{uri} permanent
# }

# Health check endpoint (internal)
:8080 {
	respond /health "OK" 200
	
	# Metrics endpoint (optional)
	# metrics /metrics
}